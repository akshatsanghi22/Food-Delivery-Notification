# apiVersion: v1
# kind: Service
# metadata:
#   name: django-postgres
#   labels:
#     app: django
# spec:
#   ports:
#     - port: 5432
#   selector:
#     app: django
#     tier: postgres
#   clusterIP: None

# ---

# apiVersion: v1
# kind: PersistentVolumeClaim
# metadata:
#   name: django-postgres-pvc
#   labels:
#     app: django
# spec:
#   accessModes:
#     - ReadWriteOnce
#   resources:
#     requests:
#       storage: 10Gi

# ---

# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: postgres
#   labels:
#     app: django
# spec:
#   selector:
#     matchLabels:
#       app: django
#       tier: postgres
#   strategy:
#     type: Recreate
#   template:
#     metadata:
#       labels:
#         app: django
#         tier: postgres
#     spec:
#       volumes:
#         - name: postgres-data
#           persistentVolumeClaim:
#             claimName: django-postgres-pvc
#       containers:
#         - image: postgres:14
#           name: postgres
#           ports:
#             - containerPort: 5432
#               name: postgres
#           volumeMounts:
#             - name: postgres-data
#               mountPath: /var/lib/postgresql/data
#           env:
#             - name: POSTGRES_DB
#               value: postgres
#             - name: POSTGRES_USER
#               value: postgres
#             - name: POSTGRES_PASSWORD
#               valueFrom:
#                 secretKeyRef:
#                   name: db-password
#                   key: password



# apiVersion: apps/v1
# kind: StatefulSet
# metadata:
#   name: postgres
# spec:
#   serviceName: postgres
#   replicas: 1
#   selector:
#     matchLabels:
#       app: postgres
#   template:
#     metadata:
#       labels:
#         app: postgres
#     spec:
#       containers:
#         - name: postgres
#           image: postgres:latest
#           envFrom:
#             - configMapRef:
#                 name: postgres-config
#           ports:
#             - containerPort: 5432
#           volumeMounts:
#             - name: postgres-data
#               mountPath: /var/lib/postgresql/data
#   volumeClaimTemplates:
#     - metadata:
#         name: postgres-data
#       spec:
#         accessModes: [ "ReadWriteMany" ]
#         storageClassName: hostpath
#         resources:
#           requests:
#             storage: 1Gi



# # postgres-service.yaml
# apiVersion: v1
# kind: Service
# metadata:
#   name: postgres
# spec:
#   selector:
#     app: postgres
#   ports:
#     - protocol: TCP
#       port: 5432
#       targetPort: 5432




apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
spec:
  
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: akashat/postgres:latest
          imagePullPolicy: "IfNotPresent"
          ports:
            - containerPort: 5432
          envFrom:
            - configMapRef:
                name: postgres-config
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgredb
      volumes:
        - name: postgredb
          persistentVolumeClaim:
            claimName: postgres-pv-claim